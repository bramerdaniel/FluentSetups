name: Build and Test FluentSetups

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  SOLUTION_PATH : src/FluentSetups.sln


jobs:
  build:

    #runs-on: ubuntu-latest 
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Setup .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: 6.0.x

    - name: setup-msbuild
      uses: microsoft/setup-msbuild@v1.1

    - name: Restore NuGet packages
      run: dotnet restore ${{ env.SOLUTION_PATH }}

    - name: Build solution
      run: msbuild ${{ env.SOLUTION_PATH }} -property:Configuration=Release
   
    - name: Setup VSTest.console.exe
      uses: darenm/Setup-VSTest@v1
  
    - name: Setup NuGet.exe
      # You may pin to the exact commit or the version.
      # uses: NuGet/setup-nuget@b2bc17b761a1d88cab755a776c7922eb26eefbfa
      uses: NuGet/setup-nuget@v1.0.6
      with:
        # NuGet version to install. Can be `latest`, `preview`, a concrete version like `5.3.1`, or a semver range specifier like `5.x`.
        nuget-version: latest
        # NuGet API Key to configure.
        nuget-api-key: ${{secrets.NUGET_API_KEY}}
        
    - name: push to nuget.org
      run: nuget push src\Release\*.nupkg -src https://api.nuget.org/v3/index.json -ApiKey ${{secrets.NUGET_API_KEY}}
  
    #- name: FluentSetups to nuget.org
      #uses: brandedoutcast/publish-nuget@v2.5.2
      #with:
      #   PROJECT_FILE_PATH: /home/runner/work/FluentSetups/FluentSetups/src/FluentSetups/FluentSetups.csproj
      #  NUGET_KEY: ${{secrets.NUGET_API_KEY}}
      # PACKAGE_NAME: FluentSetups
      # NUGET_SOURCE: https://api.nuget.org
       
    #- name: Publish NuGet
      # You may pin to the exact commit or the version.
      # uses: brandedoutcast/publish-nuget@c12b8546b67672ee38ac87bea491ac94a587f7cc
      #uses: brandedoutcast/publish-nuget@v2.5.5
      #with:
        # Filepath of the project to be packaged, relative to root of repository
        #PROJECT_FILE_PATH:  $SOLUTION_PATH
        # NuGet package id, used for version detection & defaults to project name
        #PACKAGE_NAME: # optional
        # Filepath with version info, relative to root of repository & defaults to PROJECT_FILE_PATH
        #VERSION_FILE_PATH: # optional
        # Regex pattern to extract version info in a capturing group
        #VERSION_REGEX: # optional, default is ^\s*<Version>(.*)<\/Version>\s*$
        # Useful with external providers like Nerdbank.GitVersioning, ignores VERSION_FILE_PATH & VERSION_REGEX
        #VERSION_STATIC: # optional
        # Flag to toggle git tagging, enabled by default
        #TAG_COMMIT: # optional, default is true
        # Format of the git tag, [*] gets replaced with actual version
        #TAG_FORMAT: # optional, default is v*
        # API key to authenticate with NuGet server
        #NUGET_KEY: # optional
        # NuGet server uri hosting the packages, defaults to https://api.nuget.org
        #NUGET_SOURCE: # optional, default is https://api.nuget.org
        # Flag to toggle pushing symbols along with nuget package to the server, disabled by default
        #INCLUDE_SYMBOLS: # optional
